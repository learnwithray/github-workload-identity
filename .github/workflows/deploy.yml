name: 'Terraform'

on:
  push:
    branches: [ "main" ]
  pull_request:

env:
  PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}

permissions:
  contents: read
  id-token: 'write'

jobs:
  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest


    defaults:
      run:
        shell: bash

    steps:
    # Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v3

    - id: auth
      uses: google-github-actions/auth@v2.0.0  
      with:
        workload_identity_provider: 'projects/99823646674/locations/global/workloadIdentityPools/github-workload-identity-pool//subject/repo:livewithray/github-workload-identity:ref:refs/heads/main'
        service_account: 'github-workload-identity-sa@burner-mansaini.iam.gserviceaccount.com'



## projects/99823646674/locations/global/workloadIdentityPools/github-workload-identity-pool//subject/repo:livewithray/github-workload-identity:ref:refs/heads/main
          
    # - name: Setup Terraform
    #   uses: hashicorp/setup-terraform@v1
    #   with:
    #     cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}


    # - name: Terraform Init
    #   run: terraform init


    # # Generates an execution plan for Terraform
    # - name: Terraform Plan
    #   run: terraform plan -input=false


    # - name: Terraform Apply
    #   run: terraform apply -auto-approve -input=false










# name: Connect to GCP and List Instances

# on:
#   push:
#     branches: [ "main" ]

# env:
#   PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}

# jobs:
#   build:
#     name: workload-identity
#     runs-on: ubuntu-latest
#     timeout-minutes: 90

#     permissions:
#       contents: 'read'
#       id-token: 'write'

#     steps:
#     - name: Checkout
#       uses: 'actions/checkout@v4'

#     # Configure Workload Identity Federation and generate an access token.
#     - id: 'auth'
#       name: 'Authenticate to Google Cloud'
#       uses: 'google-github-actions/auth@v2'
#       with:
#         token_format: 'access_token'
#         create_credentials_file: true
#         activate_credentials_file: true
#         workload_identity_provider:  ${{ secrets.WORKLOAD_IDENTITY_PROVIDER_ID }}
#         service_account: ${{ secrets.GCP_SERVICE_ACCOUNT }}

#     # List the instances in the project
#     - name: List Instances
#       run: |-
#         gcloud compute instances list --project $PROJECT_ID
